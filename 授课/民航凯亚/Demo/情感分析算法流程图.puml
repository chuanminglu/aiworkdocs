@startuml 情感分析算法详细流程
!theme materia
skinparam defaultFontSize 12
skinparam packageFontSize 14

title 整体情感得分计算详细算法流程

start

:📨 接收原始消息;
note right
    **示例输入**
    msg_001: "这个新功能设计得很棒！我们一起优化一下性能"
    msg_002: "又要改需求了...这已经是第三次了，压力山大"
    msg_003: "收到，我这边看一下代码逻辑"
end note

:📝 文本预处理\n去除标点和特殊字符;
note right
    **处理结果**
    msg_001: "这个新功能设计很棒我们一起优化性能"
    msg_002: "又要改需求了这已经第三次了压力山大"
    msg_003: "收到我这边看一下代码逻辑"
end note

:✂️ 中文分词\njieba.cut();
note right
    **分词结果**
    msg_001: ["这个","新","功能","设计","很","棒","我们","一起","优化","性能"]
    msg_002: ["又","要","改","需求","了","这","已经","第三次","了","压力山大"]
    msg_003: ["收到","我","这边","看","一下","代码","逻辑"]
end note

:🎯 情感词典匹配;
note left
    **词典权重**
    积极词汇: {"棒": +2, "优秀": +3, "好": +1, "赞": +2}
    消极词汇: {"烦": -2, "差": -1, "糟": -2, "压力山大": -3}
    协作词汇: {"我们": +1.5, "一起": +2.0, "大家": +1.5}
end note

partition "单条消息分析" {
    :🔍 词汇权重计算;
    note right
        **匹配结果**
        msg_001: {"棒": +2, "一起": +2.0} → 总分: +4.0, 词数: 2 → 平均: +2.0 → 归一化: +0.67
        msg_002: {"压力山大": -3} → 总分: -3.0, 词数: 1 → 平均: -3.0 → 归一化: -1.00
        msg_003: {} → 总分: 0, 词数: 0 → 平均: 0 → 归一化: 0.00
    end note
    
    if (情感分值 > 0.1?) then (是)
        :😊 标记为积极情感;
    elseif (情感分值 < -0.1?) then (是)
        :😔 标记为消极情感;
    else (否)
        :😐 标记为中性情感;
    endif
}

:📊 批量消息统计;
note right
    **分类统计**
    总消息数: 3条
    积极消息: 1条 (33.3%)
    消极消息: 1条 (33.3%)
    中性消息: 1条 (33.3%)
end note

:🧮 整体情感得分计算;
note left
    **计算公式**
    得分 = (积极比例 × 1.0 + 中性比例 × 0.5 + 消极比例 × 0.0) × 10
    
    **实际计算**
    得分 = (0.333 × 1.0 + 0.333 × 0.5 + 0.333 × 0.0) × 10
         = (0.333 + 0.167 + 0) × 10
         = 0.5 × 10
         = 5.0分
end note

if (得分 >= 8.0?) then (是)
    :🟢 优秀状态;
elseif (得分 >= 6.0?) then (是)
    :🔵 良好状态;
elseif (得分 >= 4.0?) then (是)
    :🟡 预警状态;
else (否)
    :🔴 危险状态;
endif

:📈 更新实时指标;
:🖥️ 界面展示更新;

stop

@enduml
